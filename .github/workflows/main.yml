# This is a basic workflow to help you get started with Actions

name: AddReleaseNote

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]
    types: [ closed ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  record:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs steps
      - name: Get merged pull request's name
        if: github.event.pull_request.merged == true
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "Pull request's name is: ${PR_TITLE}"
          echo "::set-env name=PR_TITLE::${PR_TITLE}"
          
      - name: Get current document
        if: github.event.pull_request.merged == true
        run: |
          getRequest=`cat << EOS
          curl \
          -X GET \
          "https://penguin-project.atlassian.net/wiki/rest/api/content/?id=140509192&expand=version,body.storage" \
          -H "content-type: application/json" \
          -u "shininghip.niigata@gmail.com:nfY8vqPu8HfeowwOKUSO921F"
          EOS
          `
          getResponse=`eval ${getRequest}`
          echo "Success"
          echo "::set-env name=getResponse::${getResponse}"
          
      - name: Create request body
        if: github.event.pull_request.merged == true
        run: |
          body=`echo ${getResponse} | jq -r .results[0].body.storage.value `
          version=`echo ${getResponse} | jq -r .results[0].version.number `
          today=`date '+%F'`
          requestBody=`cat <<- EOS
          { \
            \"id\":\"140509192\", \
            \"version\":{ \
              \"number\":$(($version + 1)), \
              \"minorEdit\":true \
            }, \
            \"title\":\"リリースノート\", \
            \"type\":\"page\", \
            \"body\":{ \
              \"storage\":{ \
                \"value\":\"${body}<p><strong>${today}</strong>: ${PR_TITLE}</p>\", \
                \"representation\":\"storage\" \
              } \
            } \
          }
          EOS
          `
          echo "Success"
          echo "::set-env name=requestBody::${requestBody}"
          
      - name: Add release note
        if: github.event.pull_request.merged == true
        run: |
          putRequest=`cat << EOS
          curl \
          -X PUT \
          "https://penguin-project.atlassian.net/wiki/rest/api/content/140509192" \
          -H "content-type: application/json" \
          -u "shininghip.niigata@gmail.com:nfY8vqPu8HfeowwOKUSO921F" \
          -d "${requestBody}" \
          -w '%{http_code}\n'
          EOS
          `
          putResponse=`eval ${putRequest}`
          echo "Success"
          echo "Completed all steps"
